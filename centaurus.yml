---
- hosts: centaurus

  vars:
  # Ubuntu doesn't have Python2 by default
  # See e.g. https://www.toptechskills.com/ansible-tutorials-courses/how-to-fix-usr-bin-python-not-found-error-tutorial/
  - ansible_python_interpreter: /usr/bin/python3
  # Galaxy user and group on system
  - galaxy_user: "centaurus-galaxy"
  - galaxy_uid: 22223
  - galaxy_group: "galaxy"
  - galaxy_gid: 400
  # Extra groups to add Galaxy user to
  - extra_groups:
      - group: "ls-bcf"
        gid: 337111
  # System Python and PostgreSQL versions
  - python_version: "3.10.5"
  - postgresql_version: "14"
  # Base installation directory
  - galaxy_install_dir: "/mnt/rvmi/centaurus/galaxy"
  # Use mamba for dependency resolution?
  - galaxy_conda_use_mamba: yes
  # Environment setup file
  - galaxy_environment_setup_file: "instances/centaurus/files/centaurus_environment_setup.sh"
  # Status monitoring page
  - galaxy_generate_status_page: yes
  # Working directory clean up interval (days)
  - galaxy_clean_up_cron_interval: 14
  ## Options for migrating to a new VM
  #- galaxy_new_db_sql: "/PATH/TO/galaxy_db_dump.sql"
  #- galaxy_force_reinstall_python: yes
  #- galaxy_force_reinstall_venv: yes
  #- galaxy_reinstall_conda: yes
  ## Define proxy environment variables if needed
  #- proxy_env:
  #    http_proxy: 'http://updateproxy.manchester.ac.uk:3128'
  #    https_proxy: 'https://updateproxy.manchester.ac.uk:3128'

  vars_files:
  # Instance-specific variables
  - instances/centaurus/{{ centaurus_galaxy_config }}
  - instances/centaurus/{{ centaurus_secrets }}
  - instances/centaurus/{{ centaurus_shed_tools }}
  - instances/centaurus/{{ centaurus_tool_data }}
  # Variables common to instances
  - instances/centaurus/custom_scss.yml
  - instances/centaurus/job_conf.yml
  - instances/centaurus/resolvers.yml
  - instances/centaurus/local_tools.yml
  - instances/centaurus/tool_data_tables.yml
  - instances/centaurus/sanitize_whitelist.yml

  roles:
  # Configure host VM
  - galaxy-user
  - python3
  - nginx
  - postgresql
  - supervisord
  - role: certbot
    when: enable_https

  # Postfix mail client
  - role: postfix-null-client
    when: enable_smtp

  # Local JSEDrop service
  - role: jsedrop
    jsedrop_drop_dir: "{{ galaxy_jse_drop_dir }}"
    when: enable_local_jse_drop

  # Install and configure Galaxy
  - galaxy-utils
  - galaxy

  # Set up users, tools etc
  - galaxy-create-users
  - galaxy-install-tools
  - galaxy-set-default-quota

  ## Use this to set environment variables on the remote
  ## when ansible tasks run (e.g. proxy settings)
  #environment: "{{ proxy_env }}"
