# Install, configure and start Supervisord on remote server
#
# NOTE: we need a newer version of Supervisord than is available
# via yum on Scientific Linux 6, hence installing it this way
# rather than pulling in from yum

---
- hosts: '{{ hosts }}'
  vars:
    supervisor_version: '3.2.2'
  tasks:
  - name: Download Supervisor source
    get_url:
      url=https://pypi.python.org/packages/source/s/supervisor/supervisor-{{supervisor_version}}.tar.gz
      dest=/root
    register: downloaded_supervisor_src

  - name: Unpack Supervisor source
    unarchive:
      src='/root/supervisor-{{ supervisor_version }}.tar.gz'
      dest=/root
      copy=no
      owner=root
      group=root
      creates='/root/supervisor-{{ supervisor_version }}'
    when: downloaded_supervisor_src | success
    register: unpacked_supervisor_src

  - name: Install Supervisor
    command:
      chdir='/root/supervisor-{{ supervisor_version }}'
      /usr/local/bin/python setup.py install --prefix=/usr/local
      creates=/usr/local/bin/supervisord
    when: unpacked_supervisor_src | success
    register: installed_supervisor

  - name: Create Supervisord conf file
    shell:
      /usr/local/bin/echo_supervisord_conf > /usr/local/etc/supervisord.conf
      creates=/usr/local/etc/supervisord.conf
    when: installed_supervisor | success
    register: created_supervisord_conf
    notify: Restart Supervisord

  - name: Create supervisord.d directory
    file:
      path='/usr/local/etc/supervisord.d'
      state=directory
    when: installed_supervisor | success
    register: created_supervisord_conf_dir

  - name: Add include to Supervisord conf file
    ini_file:
      dest='/usr/local/etc/supervisord.conf'
      section='include'
      option='files'
      value='/usr/local/etc/supervisord.d/*.ini'
    when: created_supervisord_conf | success
    notify: Restart Supervisord

  # Set up as a service
  - name: Create init.d script for Supervisord
    copy:
      dest=/etc/init.d/supervisord
      src=supervisord.init.sh
      mode='ugo+x'
    when: created_supervisord_conf | success
    register: created_supervisord_init
    notify: Restart Supervisord

  - name: Start Supervisord service
    service:
      name=supervisord
      enabled=on
      state=started
    when: created_supervisord_init | success
    
  handlers:
   - name: Restart Supervisord
     service: name=supervisord state=reloaded