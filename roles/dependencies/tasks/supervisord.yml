# Install, configure and start Supervisord on remote server
#
# NOTE: we need a newer version of Supervisord than is available
# via yum on Scientific Linux 6, hence installing it this way
# rather than pulling in from yum
---
- name: Uninstall yum version of Supervisor
  yum:
    name=supervisor
    state=absent
  register: uninstalled_supervisor

- name: Create build directory
  file:
    path='{{ build_dir }}'
    state=directory

- name: Download Supervisor source
  get_url:
    url=https://pypi.python.org/packages/source/s/supervisor/supervisor-{{supervisor_version}}.tar.gz
    dest='{{ build_dir }}'
  when: uninstalled_supervisor | success
  register: downloaded_supervisor_src

- name: Unpack Supervisor source
  unarchive:
    src='{{ build_dir }}/supervisor-{{ supervisor_version }}.tar.gz'
    dest='{{ build_dir }}'
    copy=no
    owner=root
    group=root
    creates='{{ build_dir }}/supervisor-{{ supervisor_version }}'
  when: downloaded_supervisor_src | success
  register: unpacked_supervisor_src

- name: Install Supervisor
  command:
    chdir='{{ build_dir }}/supervisor-{{ supervisor_version }}'
    {{ python_install_dir }}/bin/python setup.py install --prefix={{ supervisor_install_dir }}
    creates={{ supervisor_install_dir }}/bin/supervisord
  when: unpacked_supervisor_src | success
  register: installed_supervisor

- name: Create Supervisord conf file
  shell: >-
    {{ supervisor_install_dir }}/bin/echo_supervisord_conf > {{ supervisor_install_dir }}/etc/supervisord.conf
    creates={{ supervisor_install_dir }}/etc/supervisord.conf
  when: installed_supervisor | success
  register: created_supervisord_conf
  notify: Restart Supervisord

- name: Create supervisord.d directory
  file:
    path='{{ supervisor_install_dir }}/etc/supervisord.d'
    state=directory
  when: installed_supervisor | success
  register: created_supervisord_conf_dir

- name: Update Supervisord conf file
  ini_file:
    dest='{{ supervisor_install_dir }}/etc/supervisord.conf'
    section={{ item.section }}
    option={{ item.option }}
    value={{ item.value }}
  with_items:
  - { section: 'supervisord', option: 'logfile', value: '/var/log/supervisor/supervisord.log' }
  - { section: 'supervisord', option: 'pidfile', value: '/var/run/supervisord.pid' }
  - { section: 'include', option: 'files', value: '/usr/local/etc/supervisord.d/*.ini' }
  when: created_supervisord_conf | success
  notify: Restart Supervisord

# Set up as a service
- name: Create init.d script for Supervisord
  copy:
    dest=/etc/init.d/supervisord
    src=supervisord.init.sh
    mode='ugo+x'
  when: created_supervisord_conf | success
  register: created_supervisord_init
  notify: Restart Supervisord

- name: Start Supervisord service
  service:
    name=supervisord
    enabled=on
    state=started
  when: created_supervisord_init | success
