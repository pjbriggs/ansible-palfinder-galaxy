# Enable Galaxy's reporting interface
---
- name: Create Galaxy reports configuration file
  command:
    chdir='{{ galaxy_root }}/config'
    cp reports.ini.sample reports.ini
    creates='{{ galaxy_root }}/config/reports.ini'
  become: yes
  become_user: '{{ galaxy_user }}'

- name: Configure Galaxy reports settings
  ini_file:
    dest='{{ galaxy_root }}/config/reports.ini'
    section='app:main' option={{ item.option }} value={{ item.value }}
  with_items:
  - { option: 'database_connection', value: 'postgres://{{ galaxy_db_user }}:{{ galaxy_db_password }}@localhost:5432/{{ galaxy_db }}' }
  - { option: 'filter-with', value: 'proxy-prefix' }
  - { option: 'cookie_path', value: '/reports' }
  become: yes
  become_user: '{{ galaxy_user }}'
  notify: Reload Galaxy reports

- name: Configure Galaxy reports proxy settings
  ini_file:
    dest='{{ galaxy_root }}/config/reports.ini'
    section='filter:proxy-prefix'
    option={{ item.option }} value={{ item.value }}
  with_items:
  - { option: 'use', value: 'egg:PasteDeploy#prefix' }
  - { option: 'prefix', value: '/reports' }
  become: yes
  become_user: '{{ galaxy_user }}'
  notify: Reload Galaxy reports

# Set up as a service
- name: Create init.d script for Galaxy reports
  template:
    dest=/etc/init.d/galaxy_reports
    src=galaxy_reports.init.sh.j2
    mode=0755
  notify: Reload Galaxy reports

- name: Start Galaxy reports service
  service:
    name=galaxy_reports
    enabled=on
    state=started

# Set up Nginx proxy password protection
- name: Set up Galaxy reports access
  htpasswd:
    path={{ galaxy_reports_htpasswd }}
    name={{ galaxy_reports_user }}
    password={{ galaxy_reports_password }}
    owner=root
    group=root
    mode=0644
    create=yes
