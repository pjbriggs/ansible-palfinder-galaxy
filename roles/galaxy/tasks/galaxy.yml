# Install and configure Galaxy
---

- name: Create Galaxy directories
  file:
    path='{{ item }}'
    state=directory
  with_items:
  - '{{ galaxy_dir }}'
  - '{{ galaxy_tool_dependency_dir }}'
  - '{{ galaxy_ftp_upload_dir }}'
  - '{{ galaxy_dir }}/logs'

- name: Set Galaxy URL
  set_fact:
    galaxy_url: "{{ 'https' if enable_https else 'http' }}://{{ galaxy_server_name }}{{ galaxy_proxy_prefix }}/"

- name: Clone Galaxy source
  git:
    repo='{{ galaxy_repo }}'
    version='{{ galaxy_version }}'
    dest={{ galaxy_root }}
    force=yes

- name: Create welcome page
  template:
    dest='{{ galaxy_root }}/static/welcome.html'
    src='{{ galaxy_welcome_template }}'

- name: Import terms and conditions page
  copy:
    src='{{ galaxy_terms }}'
    dest='{{ galaxy_root }}/static/terms.html'
  when: galaxy_terms|default(None) != None

- name: Import citations page
  copy:
    src='{{ galaxy_citations }}'
    dest='{{ galaxy_root }}/static/citations.html'
  when: galaxy_citations|default(None) != None

- name: Make virtualenv in Galaxy root
  command:
    chdir={{ galaxy_root }}
    {{ galaxy_python_dir }}/bin/virtualenv .venv -p {{ galaxy_python_dir }}/bin/python
    creates='{{ galaxy_root }}/.venv'

- name: Create Galaxy configuration file
  command:
    chdir='{{ galaxy_root }}/config'
    cp galaxy.ini.sample galaxy.ini

# Set general configuration options
- name: General Galaxy configuration
  ini_file:
    dest='{{ galaxy_root }}/config/galaxy.ini'
    section='app:main' option='{{ item.option }}' value='{{ item.value }}'
  with_items:
  - { option: 'brand', value: '{{ galaxy_name }}' }
  - { option: 'logo_url', value: '{{ galaxy_url }}' }
  - { option: 'allow_user_dataset_purge', value: 'True' }
  - { option: 'allow_user_impersonation', value: 'True' }
  - { option: 'allow_user_deletion', value: 'True' }
  - { option: 'allow_library_path_paste', value: 'True' }
  - { option: 'tool_dependency_dir', value: '{{ galaxy_tool_dependency_dir }}' }
  - { option: 'id_secret', value: '{{ galaxy_id_secret }}' }
  - { option: 'admin_users', value: '{{ galaxy_admin_user }}' }
  - { option: 'welcome_url', value: '/static/welcome.html' }
  - { option: 'show_welcome_with_login', value: 'True' }

# Set proxy prefix options
- name: Set proxy prefix options
  ini_file:
    dest='{{ galaxy_root }}/config/galaxy.ini'
    section='{{ item.section }}'
    option='{{ item.option }}'
    value='{{ item.value }}'
  with_items:
  - { section: 'filter:proxy-prefix', option: 'prefix', value: '{{ galaxy_proxy_prefix }}' }
  - { section: 'app:main', option: 'filter-with', value: 'proxy-prefix' }
  - { section: 'app:main', option: 'cookie_path', value: '{{ galaxy_proxy_prefix }}' }
  when: galaxy_proxy_prefix|default(None) != None

# See https://wiki.galaxyproject.org/Admin/Config/Performance/ProductionServer#Switching_to_a_database_server
- name: Configure Galaxy database connection
  ini_file:
    dest='{{ galaxy_root }}/config/galaxy.ini'
    section='app:main'
    option='database_connection'
    value='postgres://{{ galaxy_db_user }}:{{ galaxy_db_password }}@localhost:5432/{{ galaxy_db }}'

# See https://wiki.galaxyproject.org/Admin/Config/Performance/ProductionServer#Disable_the_developer_settings
- name: Disable Galaxy configuration developer settings
  ini_file:
    dest='{{ galaxy_root }}/config/galaxy.ini'
    section='app:main' option='{{ item.option }}' value='{{ item.value }}'
  with_items:
  - { option: 'debug', value: 'False' }
  - { option: 'use_interactive', value: 'False' }

- name: Configure use of quotas
  ini_file:
    dest='{{ galaxy_root }}/config/galaxy.ini'
    section='app:main' option={{ item.option }} value={{ item.value }}
  with_items:
  - { option: 'enable_quotas', value: '{{ enable_quotas }}' }

- name: Configure Galaxy user activation
  ini_file:
    dest='{{ galaxy_root }}/config/galaxy.ini'
    section='app:main' option='{{ item.option }}' value='{{ item.value }}'
  with_items:
  - { option: 'user_activation_on', value: '{{ enable_user_activation }}' }
  - { option: 'activation_grace_period', value: '0' }

- name: Configure whether to require login
  ini_file:
    dest='{{ galaxy_root }}/config/galaxy.ini'
    section='app:main' option={{ item.option }} value={{ item.value }}
  with_items:
  - { option: 'require_login', value: '{{ enable_require_login }}' }

- name: Configure Galaxy FTP upload settings
  ini_file:
    dest='{{ galaxy_root }}/config/galaxy.ini'
    section='app:main' option='{{ item.option }}' value='{{ item.value }}'
  with_items:
  - { option: 'ftp_upload_dir', value: '{{ galaxy_ftp_upload_dir }}' }
  - { option: 'ftp_upload_site', value: '{{ galaxy_ftp_upload_site }}' }
  when: enable_ftp_upload

- name: Configure Galaxy mail settings
  ini_file:
    dest='{{ galaxy_root }}/config/galaxy.ini'
    section='app:main' option='{{ item.option }}' value='{{ item.value }}'
  with_items:
  - { option: 'smtp_server', value: 'localhost:25' }
  - { option: 'mailing_join_addr', value: '' }
  - { option: 'error_email_to', value: '{{ galaxy_incoming_email_addr }}' }
  - { option: 'email_from', value: '{{ galaxy_outgoing_email_addr }}' }
  - { option: 'instance_resource_url', value: 'None' }
  when: enable_smtp

- name: Configure Galaxy handler processes
  include: handlers.yml
  with_sequence: start=0 count={{ galaxy_handler_processes }}
  loop_control:
    loop_var: handler_number

- name: Configure terms and conditions page
  ini_file:
    dest='{{ galaxy_root }}/config/galaxy.ini'
    section='app:main'
    option='terms_url'
    value='{{ galaxy_url }}/static/terms.html'
  when: galaxy_terms|default(None) != None

- name: Configure citations page
  ini_file:
    dest='{{ galaxy_root }}/config/galaxy.ini'
    section='app:main'
    option='citation_url'
    value='{{ galaxy_url }}/static/citations.html'
  when: galaxy_citations|default(None) != None

- name: Run common_startup.sh to initialise sample files and eggs/wheels
  command:
    chdir='{{ galaxy_root }}'
    ./scripts/common_startup.sh

- name: Run create_db.py to initialise the database
  command:
    chdir='{{ galaxy_root }}'
    .venv/bin/python scripts/create_db.py

# Update tool_conf.xml
- name: Update base tool_conf.xml
  copy:
    src='{{ galaxy_tool_conf_file }}'
    dest='{{ galaxy_root}}/config/tool_conf.xml'
  when: galaxy_tool_conf_file|default(None) != None

# Import the code for the JSE-drop job runner plugin
- name: Import the JSE-drop job runner plugin files
  copy:
    dest='{{ galaxy_root }}/lib/galaxy/jobs/runners/{{ item }}'
    src='{{ item }}'
  with_items:
  - jse_drop.py
  - jse_drop_runner.py
  when: enable_jse_drop

# Create the JSE-drop directory
- name: Create JSE-drop directory
  file:
    path='{{ galaxy_jse_drop_dir }}'
    state=directory
  when: enable_jse_drop

# Create/update the job_conf.xml file
# See https://wiki.galaxyproject.org/Admin/Config/Jobs
- name: Update Galaxy job_conf XML file
  template:
    dest='{{ galaxy_root }}/config/job_conf.xml'
    src=job_conf.xml.j2
