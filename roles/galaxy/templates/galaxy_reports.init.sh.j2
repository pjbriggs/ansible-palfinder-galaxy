#!/bin/sh

# chkconfig: 345 99 01
# description: run Galaxy reporting interface

RUN_AS="{{ galaxy_user }}"
RUN_IN="{{ galaxy_root }}"
GALAXY_REPORTS_CONFIG="{{ galaxy_root }}/config/reports.yml"
GALAXY_REPORTS_PID="{{ galaxy_root }}/reports_webapp.pid"
GALAXY_REPORTS_LOG="{{ galaxy_root }}/reports_webapp.log"

# If PIDFILE exists, does it point to a galaxy_reports process?

if [ -f $GALAXY_REPORTS_PID ]; then
    pid=`cat $GALAXY_REPORTS_PID`
fi

if [ ! -x $FTPD_BIN ]; then
    echo "$0: $FTPD_BIN: cannot execute"
    exit 1
fi

case $1 in

    start)
	if [ -n "$pid" ]; then
            echo "$0: galaxy_reports [PID $pid] already running"
            exit
	fi
	if [ -r $GALAXY_REPORTS_CONFIG ]; then
            echo "Starting galaxy_reports..."
	    cmd="cd $RUN_IN && sh run_reports.sh --daemon"
            case "$(id -un)" in
		$RUN_AS)
		    eval "$cmd"
		    ;;
		root)
		    su - $RUN_AS -c "$cmd"
		    ;;
		*)
		    echo "*** ERROR *** must be $RUN_AS or root in order to control this service" >&2
		    exit 1
	    esac
	    echo "...done."
	else
            echo "$0: cannot start galaxy_reports -- $GALAXY_REPORTS_CONFIG missing"
	fi
	;;

    stop)
	if [ -n "$pid" ]; then
            echo "Stopping galaxy_reports..."
	    cmd="cd $RUN_IN && sh run_reports.sh --stop-daemon"
	    case "$(id -un)" in
		$RUN_AS)
		    eval "$cmd"
		    ;;
		root)
		    su - $RUN_AS -c "$cmd"
		    ;;
		*)
		    echo "*** ERROR *** must be $RUN_AS or root in order to control this service" >&2
		    exit 1
	    esac
	else
            echo "$0: galaxy_reports not running"
            exit 1
	fi
	;;

    status)
	if [ -n "$pid" ]; then
	    echo "galaxy_reports [PID $pid] running"
	else
            echo "galaxy_reports stopped"
	fi
	;;

    restart)
	if [ -n "$pid" ]; then
            echo "Restarting galaxy_reports..."
	    cmd="cd $RUN_IN && sh run_reports.sh --stop-daemon && sh run_reports.sh --daemon"
	    case "$(id -un)" in
		$RUN_AS)
		    eval "$cmd"
		    ;;
		root)
		    su - $RUN_AS -c "$cmd"
		    ;;
		*)
		    echo "*** ERROR *** must be $RUN_AS or root in order to control this service" >&2
		    exit 1
	    esac
	else
            echo "$0: galaxy_reports not running"
            exit 1
	fi
	;;

    *)
	echo "usage: $0 {start|stop|restart|status}"
	exit 1
	;;

esac

exit 0
