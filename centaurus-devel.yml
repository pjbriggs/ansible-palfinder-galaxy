---
- hosts: centaurus-dev

  vars:
  # Ubuntu doesn't have Python2 by default
  # See e.g. https://www.toptechskills.com/ansible-tutorials-courses/how-to-fix-usr-bin-python-not-found-error-tutorial/
  - ansible_python_interpreter: /usr/bin/python3
  # Galaxy user and group on system
  - galaxy_user: "centaurus-galaxy"
  - galaxy_uid: 22223
  - galaxy_group: "galaxy"
  - galaxy_gid: 400
  # Extra groups to add Galaxy user to
  - extra_groups:
      - group: "ls-bcf"
        gid: 337111
  # Galaxy base installation dir
  - galaxy_install_dir: "/mnt/rvmi/centaurus/galaxy"
  # Galaxy database directory
  - galaxy_file_path: "/mnt/bmh01-rvmi/bcf-galaxy/centaurus/devel/database/files"
  # Job working directory
  - galaxy_job_working_dir: "/mnt/bmh01-rvmi/bcf-galaxy/centaurus/devel/job_working_directory"
  # Data manager data directory
  - galaxy_data_manager_data_path: "/mnt/bmh01-rvmi/bcf-galaxy/centaurus/devel/tool-data"
  # New file path
  - galaxy_new_file_path: "/mnt/rvmi/centaurus/galaxy/tmp"
  # System Python and PostgreSQL versions
  - python_version: "3.10.5"
  - postgresql_version: "14"
  # Postfix settings
  - postfix_host_name: "centaurus-dev.ls.manchester.ac.uk"
  - postfix_relay_host: "smtp.manchester.ac.uk"
  # Base installation directory set in inventory file

  ## Options for migrating to a new VM
  #- galaxy_new_db_sql: "/home/centaurus-galaxy/pg_dump.sql"
  #- galaxy_force_reinstall_python: yes
  #- galaxy_force_reinstall_venv: yes
  #- galaxy_reinstall_conda: yes

  ## Define proxy environment variables if needed
  #- proxy_env:
  #    http_proxy: 'http://updateproxy.manchester.ac.uk:3128'
  #    https_proxy: 'https://updateproxy.manchester.ac.uk:3128'

  vars_files:
  # Instance-specific variables
  - instances/centaurus/devel_config.yml
  - instances/centaurus/devel_resolvers.yml
  - instances/centaurus/devel_local_tools.yml
  - instances/centaurus/devel_job_conf.yml
  - instances/centaurus/{{ centaurus_secrets }}
  # Variables common to production and devel
  - instances/centaurus/shed_tools_minimal.yml
  #- instances/centaurus/tool_data_minimal.yml
  - instances/centaurus/custom_scss.yml
  - instances/centaurus/tool_data_tables.yml
  - instances/centaurus/sanitize_whitelist.yml
  # SSL certs parameterised so use same YAML file
  # for production and devel
  - instances/centaurus/ssl_certs.yml

  roles:
  # Configure host VM
  - galaxy-user
  - python3
  - nginx
  - postgresql
  - supervisord

  # SSL certificates
  - role: certbot
    when: enable_https

  # Postfix mail client
  - role: postfix-null-client
    when: enable_smtp

  # Local JSEDrop service
  - role: jsedrop
    jsedrop_drop_dir: "{{ galaxy_jse_drop_dir }}"
    when: enable_local_jse_drop

  # Install and configure Galaxy
  - galaxy-utils
  - galaxy

  # Set up users, tools etc
  - galaxy-create-users
  - galaxy-install-tools
  - galaxy-set-default-quota

  ## Use this to set environment variables on the remote
  ## when ansible tasks run (e.g. proxy settings)
  #environment: "{{ proxy_env }}"
