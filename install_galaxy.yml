# Install and configure Galaxy distribution

---
# Install dependencies
- hosts: '{{ hosts }}'
  tasks:
  - name: Fetch Galaxy dependencies
    yum: name={{ item }} state=present
    with_items:
    - git
    - supervisor
    - python-psycopg2
    register: installed_dependencies

# Set up the Postgres Galaxy user and database
- hosts: '{{ hosts }}'
  become_user: postgres
  vars:
    - galaxy_user: galaxy
    - galaxy_db: galaxy_palfinder
  tasks:
  - name: Create PostgreSQL Galaxy user
    postgresql_user:
      name='{{ galaxy_user }}'
      password='{{ galaxy_user }}'
      role_attr_flags=NOSUPERUSER
      state=present
    when: installed_dependencies | success
    register: postgresql_galaxy_user_created

  - name: Create PostgreSQL Galaxy database
    postgresql_db:
      name='{{ galaxy_db }}'
      owner='{{ galaxy_user }}'
      state=present
    when: postgresql_galaxy_user_created | success
    register: postgresql_galaxy_db_created

# Install and configure Galaxy
- hosts: '{{ hosts }}'
  become_user: galaxy
  vars:
    - galaxy_repo: https://github.com/galaxyproject/galaxy.git
    - galaxy_version: 'v15.10'
    - galaxy_dir: /home/galaxy/galaxies/palfinder
    - galaxy_root: /home/galaxy/galaxies/palfinder/galaxy
  tasks:
  - name: Create galaxies directory
    file:
      path='{{ galaxy_dir }}'
      state=directory

  - name: Clone Galaxy source
    git:
      repo='{{ galaxy_repo }}'
      version='{{ galaxy_version }}'
      dest={{ galaxy_root }}
    when: installed_dependencies | success
    register: cloned_source

  - name: Make virtualenv in Galaxy root
    command:
      chdir={{ galaxy_root }}
      /usr/local/bin/virtualenv .venv -p /usr/local/bin/python
      creates='{{ galaxy_root }}/.venv'
    when: cloned_source | success
    register: created_virtualenv

  - name: Create Galaxy configuration file
    command:
      chdir='{{ galaxy_root }}/config'
      cp galaxy.ini.sample galaxy.ini
      creates='{{ galaxy_root }}/config/galaxy.ini'
    when: cloned_source | success
    register: created_config_file

  - name: Configure Galaxy
    ini_file:
      dest='{{ galaxy_root }}/config/galaxy.ini'
      section={{ item.section }}
      option={{ item.section }}
      value={{ item.value }}
    with_items:
    - { section: 'app:main',
        option: 'database_connection',
        value: 'postgres://galaxy:galaxy@localhost:5432/galaxy_palfinder' }
    - { section: 'app:main',
        option: 'brand',
        value: 'Microsat' }
    - { section: 'app:main',
        option: 'allow_user_dataset_purge',
        value: 'True' }
    when: created_config_file | success
    register: configured_galaxy

  - name: Initialise eggs and sample files (common_startup.sh)
    command:
      chdir='{{ galaxy_root }}'
      scripts/common_startup.sh
    when: configured_galaxy | success
    register: done_common_startup

  - name: Initialise the database (create_db.py)
    command:
      chdir='{{ galaxy_root }}'
      .venv/bin/python scripts/create_db.py
    when: done_common_startup | success
    register: initialised_database
